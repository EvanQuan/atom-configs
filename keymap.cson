# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# 'atom-workspace atom-text-editor:not([mini])':
#   # you may have to unset the keybinding if it's already in use.
#
#   # Expand current cursor
#   'ctrl-j': 'multi-cursor:expandDown'
#   'ctrl-k':   'multi-cursor:expandUp'
#
#   # Move the last cursor.
#   'ctrl-alt-j':  'multi-cursor:move-last-cursor-down'
#   'ctrl-alt-l': 'multi-cursor:move-last-cursor-right'
#   'ctrl-alt-h':  'multi-cursor:move-last-cursor-left'
#   'ctrl-alt-k':    'multi-cursor:move-last-cursor-up
# You can find more information about keymaps in these guides:
# * http://flight-manual.atom.io/using-atom/sections/basic-customization/#_customizing_keybindings
# * http://flight-manual.atom.io/behind-atom/sections/keymaps-in-depth/
#
# If you're having trouble with your keybindings not working, try the
# Keybinding Resolver: `Cmd+.` on OS X and `Ctrl+.` on other platforms. See the
# Debugging Guide for more information:
# * http://flight-manual.atom.io/hacking-atom/sections/debugging/#check-the-keybindings
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson


# https://github.com/atom/atom/issues/9544#issuecomment-254378382
# 'atom-text-editor':
#     'ctrl-shift-g': 'custom:refresh-git-status'

# multiple cursors
'.platform-win32 .editor, .platform-linux .editor':
  'ctrl-shift-l': 'editor:split-selections-into-lines'
  'ctrl-alt-l': 'tree-view:toggle-focus'
# vim-mode autocomplete movement
'.autocomplete-active':
  'ctrl-j': 'core:move-down'
  'ctrl-k': 'core:move-up'
  'tab': 'core:move-down'
  'shift-tab': 'core:move-up'

# vim-mode-plus keymapping
# all except insert
'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  # Go up and down visual lines, good for soft wrapping
  'j': 'vim-mode-plus:move-down-screen'
  'k': 'vim-mode-plus:move-up-screen'
  # Go up and down half a page
  'ctrl-j': 'vim-mode-plus:scroll-half-screen-down'
  'ctrl-k': 'vim-mode-plus:scroll-half-screen-up'
# insert

'atom-text-editor.vim-mode-plus.visual-mode':
  'ctrl-t': 'vim-mode-plus-user:move-selected-text-toggle-overwrite'

  'ctrl-k': 'vim-mode-plus-user:move-selected-text-up'
  'ctrl-j': 'vim-mode-plus-user:move-selected-text-down'
  'ctrl-h': 'vim-mode-plus-user:move-selected-text-left'
  'ctrl-l': 'vim-mode-plus-user:move-selected-text-right'

  'cmd-K': 'vim-mode-plus-user:duplicate-selected-text-up'
  'cmd-J': 'vim-mode-plus-user:duplicate-selected-text-down'
  'cmd-H': 'vim-mode-plus-user:duplicate-selected-text-left'
  'cmd-L': 'vim-mode-plus-user:duplicate-selected-text-right'
